# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Set Environment Variables
        id: build_environment
        run: |
          umask 0077
          echo "home=${HOME}" >> ${GITHUB_ENV}
          echo "workspace=${GITHUB_WORKSPACE}" >> ${GITHUB_ENV}
          echo "LC_CTYPE=pl_PL.UTF-8" >> ${GITHUB_ENV}
          echo "LC_COLLATE=pl_PL.UTF-8" >> ${GITHUB_ENV}
          echo "TZ=Europe/Warsaw" >> ${GITHUB_ENV}
          echo "TIMESTAMP=$(date +%Y%m%d%H%M%S)" >> ${GITHUB_ENV}
          echo "PREFIX=${HOME}/usr" >> ${GITHUB_ENV}
          echo "SYSCONFDIR=${HOME}/etc/conf" >> ${GITHUB_ENV}
          echo "LOCALSTATEDIR=${HOME}/var" >> ${GITHUB_ENV}

      - name: Setup the Machine for the build
        run: |
          sudo apt-get update -y
          sudo apt-get dist-upgrade -y
          sudo apt-get install -y locales-all
          sudo apt-get install -y libedit-dev libxml2-utils xmlto xsltproc devscripts libdistro-info-perl dpkg-dev fakeroot debhelper asciidoctor lftp curl imagemagick
          curl --progress-bar --ipv4 --connect-timeout 8 --max-time 120 --retry 128 https://codestation.org/github-actions/yaal-bundle.tar --output yaal-bundle.tar
          tar xvpf yaal-bundle.tar
          export BUNDLE=$(tar tf yaal-bundle.tar)
          tar xvpf "${BUNDLE}"
          export OS=$(echo "${BUNDLE}" | awk -F '-' '{print $3"-"$4}')
          export ARCH=$(echo "${BUNDLE}" | awk -F '-' '{print $5}' | awk -F '.' '{print $1}')
          export VER=$(echo "${BUNDLE}" | awk -F '-' '{print $2}')
          sudo dpkg -i yaal-bundle/${OS}/${ARCH}/${VER}/yaal{,-dev}_*.deb

      - name: Cache Compilation Results
        id: use-ccache
        uses: actions/cache@v2
        with:
          path: |
            ${{ env.home }}/.ccache
          key: ${{ runner.os }}-ccache-${{ env.TIMESTAMP }}
          restore-keys: |
            ${{ runner.os }}-ccache-

      - name: Install Development Configuration Files
        run: |
          umask 0077
          ./setup.sh
          make purge
          make

      - name: Build the Package
        run: |
          umask 0077
          make -C _deploy/debian clean package bundle BUILD_ID="-0codestation${TIMESTAMP}"

      - name: Upload the Artifact
        env:
          CODESTATION_GITHUB_ACTIONS_FTP_PASS: ${{ secrets.CODESTATION_GITHUB_ACTIONS_FTP_PASS }}
        run: test -f debian/tmp/huginn-bundle.tar && while ! lftp -e 'set ssl:verify-certificate off;set xfer:timeout 4;set net:timeout 4;set net:persist-retries 1024;set net:max-retries 1024;set ftp:prefer-epsv false;set ftp:passive-mode true;put debian/tmp/huginn-bundle.tar;quit' -u "github-actions,${CODESTATION_GITHUB_ACTIONS_FTP_PASS}" codestation.org ; do true ; done

