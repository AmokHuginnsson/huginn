cmake_minimum_required( VERSION 2.8 )
project( huginn CXX )
include( ../yaal/_aux/cmakelib.cmake )

if ( CMAKE_HOST_WIN32 )
	add_definitions( /D_HAS_ITERATOR_DEBUGGING=0 )
endif()

use_cxx_compiler_flag( -Wno-missing-noreturn )
find_package( yaal COMPONENTS hcore tools dbwrapper hconsole REQUIRED )

include_directories( . )
configure_file( ../yaal/_aux/cmake-client-config.hxx ${TARGET_PATH}/config.hxx )

file( GLOB SRCS ./src/*.cxx )
file( GLOB HDRS ./src/*.hxx )
add_executable( ${PROJECT_NAME} ${SRCS} ${HDRS} ../yaal/_aux/cmake-client-config.hxx )
set_target_properties( ${PROJECT_NAME} PROPERTIES LINKER_LANGUAGE CXX OUTPUT_NAME 1exec RUNTIME_OUTPUT_DIRECTORY_DEBUG ${TARGET_PATH}/huginn RUNTIME_OUTPUT_DIRECTORY_DEBUG ${TARGET_PATH}/huginn RUNTIME_OUTPUT_DIRECTORY_RELEASE ${TARGET_PATH}/huginn RUNTIME_OUTPUT_DIRECTORY_COV ${TARGET_PATH}/huginn RUNTIME_OUTPUT_DIRECTORY_PROF ${TARGET_PATH}/huginn )
if ( CMAKE_HOST_WIN32 )
	set_source_files_properties( ${CHILD_SRCS} COMPILE_FLAGS "/FIglibc/bits/signum.h /FIyaal/fix.hxx" )
	target_link_libraries( ${PROJECT_NAME} ${yaal_LIBRARIES} libintl )
	file( GLOB makedef_PROJ RELATIVE ${CMAKE_HOME_DIRECTORY} ../yaal/makedef.vc*proj )
	include_external_msproject( makedef ${makedef_PROJ} )
	file( GLOB mkheaders_PROJ RELATIVE ${CMAKE_HOME_DIRECTORY} ../yaal/mkheaders.vc*proj )
	include_external_msproject( mkheaders ${mkheaders_PROJ} )
	file( GLOB msvcxx_PROJ RELATIVE ${CMAKE_HOME_DIRECTORY} ../yaal/msvcxx.vc*proj )
	include_external_msproject( msvcxx ${msvcxx_PROJ} )
	file( GLOB hcore_PROJ RELATIVE ${CMAKE_HOME_DIRECTORY} ../yaal/hcore.vc*proj )
	include_external_msproject( hcore ${hcore_PROJ} msvcxx makedef )
	file( GLOB tools_PROJ RELATIVE ${CMAKE_HOME_DIRECTORY} ../yaal/tools.vc*proj )
	include_external_msproject( tools ${tools_PROJ} hcore )
	file( GLOB dbwrapper_PROJ RELATIVE ${CMAKE_HOME_DIRECTORY} ../yaal/dbwrapper.vc*proj )
	include_external_msproject( dbwrapper ${dbwrapper_PROJ} tools )
	file( GLOB hconsole_PROJ RELATIVE ${CMAKE_HOME_DIRECTORY} ../yaal/hconsole.vc*proj )
	include_external_msproject( hconsole ${hconsole_PROJ} tools )
	file( GLOB hdata_PROJ RELATIVE ${CMAKE_HOME_DIRECTORY} ../yaal/hdata.vc*proj )
	include_external_msproject( hdata ${hdata_PROJ} dbwrapper hconsole )
	file( GLOB INSTALL_PROJ RELATIVE ${CMAKE_HOME_DIRECTORY} ../yaal/INSTALL.vc*proj )
	include_external_msproject( INSTALL ${INSTALL_PROJ} hdata mkheaders )
	add_dependencies( huginn INSTALL )
else()
	target_link_libraries( ${PROJECT_NAME} ${yaal_LIBRARIES} )
endif()

